buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
		maven { url = "https://repo.spongepowered.org/maven" }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
		classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: "org.spongepowered.mixin"
apply plugin: 'maven-publish'

def buildNumber = System.getenv("GPR_BUILD_NUMBER") ?: "0"
version = project.mod_version + "+" + buildNumber
group = project.maven_group
archivesBaseName = project.mod_id

java.toolchain.languageVersion = JavaLanguageVersion.of(16)

minecraft {
    mappings channel: 'official', version: '1.17.1'

    runs {
        client {
            workingDirectory project.file('run')

			arg "-mixin.config=refinedrelocation.mixins.json"

            property "mixin.env.disableRefMap", "true"
            property "mixin.debug.expor<t", "true"
            property "mixin.debug.export.decompile", "false"
            property "mixin.debug.verbose", "true"
            property "mixin.debug.dumpTargetOnFailure", "true"
            property "mixin.checks", "true"
            property "mixin.hotSwap", "true"

            property 'forge.logging.console.level', 'debug'

            mods {
                refinedrelocation {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

			arg "-mixin.config=refinedrelocation.mixins.json"

            property "mixin.env.disableRefMap", "true"
            property "mixin.debug.export", "true"
            property "mixin.debug.export.decompile", "false"
            property "mixin.debug.verbose", "true"
            property "mixin.debug.dumpTargetOnFailure", "true"
            property "mixin.checks", "true"
            property "mixin.hotSwap", "true"

            property 'forge.logging.console.level', 'debug'

            mods {
                refinedrelocation {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.console.level', 'debug'

			arg "-mixin.config=refinedrelocation.mixins.json"

            property "mixin.env.disableRefMap", "true"
            property "mixin.debug.export", "true"
            property "mixin.debug.export.decompile", "false"
            property "mixin.debug.verbose", "true"
            property "mixin.debug.dumpTargetOnFailure", "true"
            property "mixin.checks", "true"
            property "mixin.hotSwap", "true"

            args '--mod', 'refinedrelocation', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                refinedrelocation {
                    source sourceSets.main
                }
            }
        }
    }
}

// Workaround to fix dependencies:
configurations {
    library
    implementation.extendsFrom library
}

minecraft.runs.all {
    lazyToken('minecraft_classpath') {
        configurations.library.copyRecursive().resolve().collect { it.absolutePath }.join(File.pathSeparator)
    }
}

sourceSets {
	main {
        java {
            srcDirs '../shared/src/java/'
        }
        resources {
            srcDirs '../shared/src/resources/'
            srcDirs 'src/generated/resources'
        }
		ext.refMap = "refmap.refinedrelocation.json"
	}
}

repositories {
    maven { url "https://www.cursemaven.com" }

    // For Cloth Config
    maven { url "https://maven.shedaniel.me/" }

    // For JEI
    maven {
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }

    maven {
		url "https://maven.pkg.github.com/ModdingForBlockheads/Balm"
		credentials {
			username project.findProperty("gpr.user") ?: System.getenv("GPR_USERNAME")
			password project.findProperty("gpr.key") ?: System.getenv("GPR_TOKEN")
		}
	}
}

dependencies {
    minecraft "net.minecraftforge:forge:${project.minecraft_version}-${project.forge_version}"
    annotationProcessor 'org.spongepowered:mixin:0.8.4:processor'

    implementation fg.deobf("net.blay09.mods:balm:1.7.0+121")

    compileOnly fg.deobf("mezz.jei:jei-1.17.1:8.1.0.19:api")
    runtimeOnly fg.deobf("mezz.jei:jei-1.17.1:8.1.0.19")
    implementation fg.deobf("curse.maven:the-one-probe-245211:3430022")
    implementation fg.deobf("curse.maven:wthit-455982:3480293")

    compileOnly fg.deobf("me.shedaniel.cloth:cloth-config-forge:5.0.38")

    implementation "org.jetbrains:annotations:22.0.0"
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : project.mod_id,
                "Specification-Vendor"    : "BlayTheNinth",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "BlayTheNinth",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
				"MixinConfigs": "refinedrelocation.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
			artifactId = project.archivesBaseName
			
            artifact jar
        }
    }
    repositories {
		maven {
			name = "GitHubPackages"
			url = uri("https://maven.pkg.github.com/" + project.github_publish)
			credentials {
				username = project.findProperty("gpr.user") ?: System.getenv("GPR_USERNAME")
				password = project.findProperty("gpr.key") ?: System.getenv("GPR_TOKEN")
			}
		}
	}
}
